(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-ef615eea"],{"90f1":function(e,t,a){"use strict";a.r(t);var r=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("el-dialog",{directives:[{name:"dialogDrag",rawName:"v-dialogDrag"}],attrs:{"close-on-click-modal":!1,title:"流程催办",visible:e.visible},on:{"update:visible":function(t){e.visible=t}}},[a("el-form",{directives:[{name:"loading",rawName:"v-loading",value:e.loading,expression:"loading"}],ref:"inputForm",attrs:{size:"small",model:e.inputForm,"label-width":"120px"},nativeOn:{keyup:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.inputFormSubmit()},submit:function(e){e.preventDefault()}}},[a("el-form-item",{attrs:{label:"催办方式",prop:"checkedUrgeTypes",rules:[{required:!0,message:"催办方式不能为空",trigger:"blur"}]}},[a("el-checkbox-group",{model:{value:e.inputForm.checkedUrgeTypes,callback:function(t){e.$set(e.inputForm,"checkedUrgeTypes",t)},expression:"inputForm.checkedUrgeTypes"}},e._l(e.urgeTypes,(function(t){return a("el-checkbox",{key:t,attrs:{label:t}},[e._v(e._s(t))])})),1)],1),a("el-form-item",{attrs:{label:"催办内容",prop:"content",rules:[{required:!0,message:"催办内容不能为空",trigger:"blur"}]}},[a("el-input",{attrs:{type:"textarea",rows:4,placeholder:"请输入催办内容"},model:{value:e.inputForm.content,callback:function(t){e.$set(e.inputForm,"content",t)},expression:"inputForm.content"}})],1)],1),a("span",{staticClass:"dialog-footer",attrs:{slot:"footer"},slot:"footer"},[a("el-button",{attrs:{size:"small",icon:"el-icon-circle-close"},on:{click:function(t){e.visible=!1}}},[e._v("关闭")]),a("el-button",{directives:[{name:"noMoreClick",rawName:"v-noMoreClick"}],attrs:{size:"small",type:"primary",icon:"el-icon-circle-check"},on:{click:function(t){return e.inputFormSubmit()}}},[e._v("确定")])],1)],1)},n=[],o=a("c7d4"),i={data:function(){return{visible:!1,loading:!1,urgeTypes:["系统通知","站内信","短信","邮件"],inputForm:{checkedUrgeTypes:["系统通知","站内信"],taskId:"",content:""}}},methods:{init:function(e){this.visible=!0,this.inputForm.taskId=e,this.$refs.inputForm.resetFields()},inputFormSubmit:function(){var e=this;this.$refs["inputForm"].validate((function(t){t&&(e.loading=!0,o["a"].urge(e.inputForm).then((function(t){var a=t.data;e.$message.success(a),e.refreshList(),e.visible=!1,e.loading=!1})).catch((function(){e.loading=!1,e.visible=!1})))}))}}},s=i,l=a("2877"),c=Object(l["a"])(s,r,n,!1,null,null,null);t["default"]=c.exports},c7d4:function(e,t,a){"use strict";var r=a("8f4d");t["a"]={start:function(e){return Object(r["a"])({url:"/flowable/task/start",method:"post",data:e})},todoList:function(e){return Object(r["a"])({url:"/flowable/task/todo",method:"get",params:e})},historicList:function(e){return Object(r["a"])({url:"/flowable/task/historic",method:"get",params:e})},historicTaskList:function(e){return Object(r["a"])({url:"/flowable/task/historicTaskList",method:"get",params:{procInsId:e}})},myApplyedList:function(e){return Object(r["a"])({url:"/flowable/task/myApplyed",method:"get",params:e})},getTaskDef:function(e){return Object(r["a"])({url:"/flowable/task/getTaskDef",method:"get",params:e})},delegate:function(e,t){return Object(r["a"])({url:"/flowable/task/delegate",method:"put",params:{taskId:e,userId:t}})},callback:function(e){return Object(r["a"])({url:"/flowable/task/callback",method:"put",params:e})},audit:function(e){return Object(r["a"])({url:"/flowable/task/audit",method:"post",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=utf-8"},data:e})},backNodes:function(e){return Object(r["a"])({url:"/flowable/task/backNodes",method:"put",params:{taskId:e}})},back:function(e){return Object(r["a"])({url:"/flowable/task/back",method:"put",params:e})},transfer:function(e,t){return Object(r["a"])({url:"/flowable/task/transfer",method:"put",params:{taskId:e,userId:t}})},addSignTask:function(e){return Object(r["a"])({url:"/flowable/task/addSignTask",method:"post",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=utf-8"},data:e})},getFlowChart:function(e){return Object(r["a"])({url:"/flowable/task/getFlowChart",method:"get",params:{processInstanceId:e}})},urge:function(e){return Object(r["a"])({url:"/flowable/task/urge",method:"post",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=utf-8"},data:e})}}}}]);